defineWpiUtilProperties()
defineHALProperties()

def $driverreplace$SetupModel = { project ->
    project.model {
        components {
            $driverreplace$(NativeLibrarySpec) {
                targetPlatform 'arm'
                setupDefines(project, binaries)

                binaries.all {
                    tasks.withType(CppCompile) {
                        addUserLinks(linker, targetPlatform, false)
                        addWpiUtilLibraryLinks(it, linker, targetPlatform)
                        addHalLibraryLinks(it, linker, targetPlatform)
                    }
                }

                if (includeJava) {
                    project.setupJniIncludes(binaries)
                }

                sources {
                    cpp {
                        source {
                            srcDirs = ["${rootDir}/$driverreplace$/src"]
                            if (includeJava) {
                                srcDirs "${rootDir}/java/lib"
                            }
                            includes = ["**/*.cpp",]
                        }
                        exportedHeaders {
                            srcDirs = ["${rootDir}/$driverreplace$/include", "${rootDir}/libraries/$driverreplace$/include", halInclude, wpiUtilInclude]
                            if (includeJava) {
                                project.jniHeaders$implreplace$.outputs.files.each { file ->
                                    srcDirs file.getPath()
                                }
                            }
                            includes = ['**/*.h']
                        }
                    }
                }
            }
        }
    }
}

project(':arm:$driverreplace$') {
    apply plugin: 'cpp'

    apply from: "${rootDir}/toolchains/arm.gradle"

    if (includeJava) {
        apply from: "${rootDir}/java/java.gradle"
    }

    $driverreplace$SetupModel(project)
}
