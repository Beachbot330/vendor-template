defineWpiUtilProperties()
defineHALProperties()
defineNetworkTablesProperties()
defineWpiLibProperties()

def cppSetupModel = { project ->
    project.model {
        components {
            $implreplace$(NativeLibrarySpec) {
                targetPlatform 'arm'
                setupDefines(project, binaries)

                binaries.all {
                    tasks.withType(CppCompile) {
                        addUserLinks(linker, targetPlatform, false)
                        addHalLibraryLinks(it, linker, targetPlatform)
                        addWpiUtilLibraryLinks(it, linker, targetPlatform)
                        addNetworkTablesLibraryLinks(it, linker, targetPlatform)
                        addWpilibLibraryLinks(it, linker, targetPlatform)
                    }
                }

                sources {
                    cpp {
                        source {
                            srcDirs = ["${rootDir}/cpp/src"]
                            includes = ["**/*.cpp"]
                        }
                        exportedHeaders {
                            srcDirs = ["${rootDir}/cpp/include", "${rootDir}/libraries/driver/include", "${rootDir}/libraries/cpp/include", wpilibInclude, halInclude, wpiUtilInclude, netTablesInclude]
                            includes = ['**/*.h']
                        }
                        lib project: ':arm:driver', library: '$driverreplace$', linkage: 'static'
                    }
                }
            }
        }
    }
}

project(':arm:cpp') {
    apply plugin: 'cpp'

    apply from: "${rootDir}/toolchains/arm.gradle"

    cppSetupModel(project)
    
    project.debugStripSetup()
}
